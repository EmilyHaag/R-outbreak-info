roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
setwd(./outbreakinfo)
setwd("./outbreakinfo")
getwd()
document()
roxygen2::document()
library(outbreakinfo)
getISO3("California")
install(outbreakinfo)
install.packages(outbreakinfo)
library(outbreakinfo)
library(outbreakinfo)
library(outbreakinfo)
getISO3("California")
.onLoad <- function(libname, pkgname){
api.url <- "https://api.outbreak.info/v1/"
}
getISO3("California")
roxygen2::roxygenise()
roxygen2::roxygenise()
getISO3 <- function(locations_to_search){
api.url <- "https://api.outbreak.info/v1/"
locs_of_interest=c()
scroll.id <- NULL
location.ids <- paste0("(name:%22", paste(locations_to_search, collapse="%22%20OR%20name:%22"), "%22)")
results <- list()
success <- NULL
while(is.null(success)){
dataurl <- paste0(api.url, "query?q=",location.ids,"%20AND%20mostRecent:true&fields=name,location_id,state_name&fetch_all=true")
dataurl <- gsub(" ", "+", dataurl)
dataurl <- ifelse(is.null(scroll.id), dataurl, paste0(dataurl, "&scroll_id=", scroll.id))
resp <- fromJSON(dataurl, flatten=TRUE)
scroll.id <- resp$'_scroll_id'
results[[length(results) + 1]] <- resp$hits
success <- resp$success
}
t <- try(rbind_pages(results), silent=T)
if("try-error" %in% class(t)){
error=T
}else{
hits <- rbind_pages(results)
df=(hits)
locs_of_interest=df$location_id
}
if (length(locs_of_interest)==length(locations_to_search)){
return(locs_of_interest)
}
if (length(locs_of_interest)!=length(locations_to_search)||error==T){
locations=c()
locs_of_interest=c()
for (i in locations_to_search){
if (grepl(" ", i, fixed=TRUE)==T){
locs=paste0("*",i,"*")
locs=gsub(" ", "*", locs, fixed=TRUE)
}else{
locs=paste0("*",i,"*")
}
locations=c(locations, locs)
}
scroll.id <- NULL
location.ids <- paste0("(name:", paste(locations, collapse="%20OR%20name:"), ")")
results <- list()
success <- NULL
while(is.null(success)){
dataurl <- paste0(api.url, "query?q=",location.ids,"%20AND%20mostRecent:true&fields=name,location_id,state_name&fetch_all=true")
dataurl <- gsub(" ", "+", dataurl)
dataurl <- ifelse(is.null(scroll.id), dataurl, paste0(dataurl, "&scroll_id=", scroll.id))
resp <- fromJSON(dataurl, flatten=TRUE)
scroll.id <- resp$'_scroll_id'
results[[length(results) + 1]] <- resp$hits
success <- resp$success
}
hits <- rbind_pages(results)
df=(hits)
df$name=apply(cbind(df$name, df$state_name), 1, function(x) paste(x[!is.na(x)], collapse = ", "))
for (i in df$name){
print(i)
loc_sel <- readline("Is this a location of interest? (Y/N): ")
if ((loc_sel == "Y")|(loc_sel == "y")){
locs_of_interest = c(locs_of_interest, df$location_id[df$name==i])
}
if ((loc_sel != "Y")&(loc_sel != "y")&(loc_sel != "N")&(loc_sel != "n")){
print("Expected input is Y or N")
print(i)
loc_sel <- readline("Is this a location of interest? (Y/N): ")
if ((loc_sel == "Y")|(loc_sel == "y")){
locs_of_interest = c(locs_of_interest, df$location_id[df$name==i])
}
}
}
}
return(locs_of_interest)
}
library(outbreakinfo)
library(outbreakinfo)
getISO3("California")
roxygen2::roxygenise()
library(outbreakinfo)
getISO3("California")
roxygen2::roxygenise()
roxygen2::roxygenise()
library(outbreakinfo)
roxygen2::roxygenise()
library(outbreakinfo)
library(outbreakinfo)
getISO3("California")
getwd()
library(outbreakinfo)
getISO3("California")
library(outbreakinfo)
getISO3("California")
library(outbreakinfo)
getISO3("California")
library(outbreakinfo)
print(parent.env(environment()))
roxygen2::roxygenise()
library(outbreakinfo)
roxygen2::roxygenise()
library(outbreakinfo)
getLocationData("Brazil")
roxygen2::roxygenise()
roxygen2::roxygenise()
library(outbreakinfo)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(outbreakinfo)
df=getAdmn2ByState("California")
unique(df$name)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
R CMD check found WARNINGs
roxygen2::roxygenise()
library(outbreakinfo)
getAdmn2ByState("California")
roxygen2::roxygenise()
library(outbreakinfo)
getAdmn1ByCountry("India")
roxygen2::roxygenise()
roxygen2::roxygenise()
library(outbreakinfo)
plotCovid("Iraq", confirmed_per_100k)
plotCovid("Iraq", "dead_per_100k")
show(plotCovid("Iraq", "dead_per_100k"))
roxygen2::roxygenise()
plotCovid("Florida", "confirmed_per_100k")
show(plotCovid("Florida", "confirmed_per_100k"))
roxygen2::roxygenise()
library(outbreakinfo)
roxygen2::roxygenise()
library(outbreakinfo)
install.packages("scales")
library(jsonlite)
library(ggplot2)
